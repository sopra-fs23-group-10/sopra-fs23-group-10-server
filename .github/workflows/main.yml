name: Deploy Project to App Engine

on:
  push:
    branches:
      - main

  # run the workflow manually from the Actions tab
  workflow_dispatch:

jobs:


  test:
    name: test and sonarqube
    runs-on: ubuntu-latest

    steps:
      - name: checkout repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: install java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: build project
        run: ./gradlew build --no-build-cache

      - name: Install Cloud SQL Proxy
        run: |
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy
          sudo mv cloud_sql_proxy /usr/local/bin/

      - name: Start Cloud SQL Proxy
        run: |
          sudo /usr/local/bin/cloud_sql_proxy \
            -instances=${{ secrets.DB_PROJECT_ID }}:${{ secrets.DB_REGION }}:${{ secrets.DB_INSTANCE_ID }}=tcp:5432 \
            -credential_file=<(echo ${{ secrets.GCP_SERVICE_CREDENTIALS }}) &

      - name: test and analyze
        run: ./gradlew test jacocotestreport sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SP_DS_UR: ${{ secrets.SP_DS_UR }}
          SP_DS_UN: ${{ secrets.SP_DS_UN }}
          SP_DS_PW: ${{ secrets.SP_DS_PW }}
          SP_DS_DRIVER: org.postgresql.Driver
          SP_DS_PLATFORM: org.hibernate.dialect.PostgreSQLDialect


  deploy:
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Cloud SQL Proxy
        run: |
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy
          sudo mv cloud_sql_proxy /usr/local/bin/

      - name: Start Cloud SQL Proxy
        run: |
          sudo /usr/local/bin/cloud_sql_proxy \
            -instances=${{ secrets.DB_PROJECT_ID }}:${{ secrets.DB_REGION }}:${{ secrets.DB_INSTANCE_ID }}=tcp:5432 \
            -credential_file=<(echo ${{ secrets.GCP_SERVICE_CREDENTIALS }}) &

      - name: Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v0.2.0
        with:
          deliverables: app.yaml
          version: v1
          credentials: ${{ secrets.GCP_SERVICE_CREDENTIALS }}
        env:
          SP_DS_UR: ${{ secrets.SP_DS_UR }}
          SP_DS_UN: ${{ secrets.SP_DS_UN }}
          SP_DS_PW: ${{ secrets.SP_DS_PW }}
          SP_DS_DRIVER: org.postgresql.Driver
          SP_DS_PLATFORM: org.hibernate.dialect.PostgreSQLDialect

      - name: Test
        run: curl "${{ steps.deploy.outputs.url }}"